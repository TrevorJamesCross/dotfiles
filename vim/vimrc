" set leader key
let mapleader='\'

" disable vi compatibility
set nocompatible

" set custom runtime path
set runtimepath+=/home/$USER/.vim/start/*

" turn on syntax highlighting.
syntax on
filetype plugin indent on

" show matching brackets
set showmatch

" disable default vim startup message.
set shortmess+=I

" show line numbers and show location in file
set number
set ruler

" set color scheme
colorscheme gruvbox
set background=dark
let g:gruvbox_contrast_dark='hard'

" set airline color scheme
let g:airline_theme='gruvbox'

" set vertical line position
set colorcolumn=90
highlight colorcolumn ctermbg=DarkGrey

" fix backspace
set backspace=indent,eol,start

" config tabs
set tabstop=8
set softtabstop=0
set shiftwidth=4
set expandtab
set autoindent
set smarttab

" remove hidden protection
set hidden

" set search to initially ignore casing unless capital letters are in the
" search and make searching incremental
set ignorecase
set smartcase
set incsearch

" unbind some useless/annoying default key bindings.
nmap Q <Nop>

" disable audible bell
set noerrorbells visualbell t_vb=

" enable mouse support
set mouse+=a

" remap <ESC> to jk
inoremap jk <ESC>

" remove conceal for JSON files
let g:vim_json_conceal=0

" configure ale (linting plugin)
let g:ale_completion_enabled = 1
let g:ale_lint_on_text_changed = 'always'
let g:ale_python_flake8_executable = 'flake8'
let g:ale_python_flake8_options = '--max-line-length=1000'
let g:ale_python_pylint_executable = 'pylint'
let g:ale_virtualtext_cursor = 'disabled'
let g:ale_warn_about_trailing_whitespace = 0
let g:ale_warn_about_trailing_blank_lines = 0
let g:ale_linters = {'python': ['flake8', 'pylint']}
let g:ale_linters_ignore = {'python': ['pylint']}
let g:ale_fix_on_save = 1
let g:ale_fixers = {'*': ['remove_trailing_lines', 'trim_whitespace']}
let g:ale_sign_column_always = 1

" customize linting
let g:flake8_show_in_gutter=1
autocmd BufWritePost *.py call flake8#Flake8()

" disable arrow keys in normal and insert modes
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>

" map command to comment out block of code
vnoremap <leader>c :s/^\(# \)\?/\=empty(submatch(1)) ? '# ' : ''/g<CR>
